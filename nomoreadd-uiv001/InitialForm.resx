<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="contactsBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD0AAAA9CAYAAAAeYmHpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABEhJREFUaEPlm0Fu1DAUhnuEHqFH6BF6hB6hR+gReoQeoRtWbLpihUQRiy4QooIF
        SAi1UhcIIUElkJBgMbzPqVPH+ZNJbGeaDE/6qplXx/Fvvzw7iWdntVr9d0hnKXZePNkzDo0T49y46IEy
        R8a+qqsk0pmDNRqRZ8aNsUrkzqCT6IRddZ4cpHMsNMxgpHKEdkEH0Il76twpSOdQrCFeLA1TDS5NEfHS
        OQQ7OaG3KbExp0Zy2EtnH5zMIPGoxmwSLqUD1cZ1SGcXdpJ947FGt4tj1dY+pFNhlRPO6qRz4Ey1uQvp
        jLFK5yzYM1i4dIZYZUsQ7BkkXDo9VslBVOkSOFVaQqQT7GCWkHNLWkM5Upo80gl24FVU0ZJgsDoXMdpZ
        rbJUZUviQmmDtqMKa1XJEpFh3nZU61tVwRIhzFvL1eaXasWlDl4yJ6FGp7PxZbtG2XMXanQ66w/VjYQ6
        KIv9189WJ9fvavjeVe7ix1drSmVnXz6vdl89lWUTaFzboejjqGA2p7cfreq24Q/LIe7u75/7/z4YnRCW
        y+DcqpOii87LjGqfHX24rMsef3pz721bV2QkUCc0L7h4aKuRC+3m96+6bF8HHbx93qg3gzrEveiiNxV7
        l0TTevPlGfUuKzjS9c2IF83jF1UwibGiuaavfn6/9z7Y+bfbRr2ZXFmVDdHFH/+MCW9AOBmb5AWEfPj/
        Epg1RBe/mxqTyADRh+9fuuNIbAXDOsQ9U/OiVYFshk5ZXR1ENBRMZDC9aGDEEOWJR1Bdy7HFUZGBy+AI
        nnS9jUhGyxOusvqydmjkB5JjWG8ibh2O6OKPhBDGqBKeysjKPmyHCo8viURq0UXvnxnZISGLeSF0wDqj
        zvhcCVSi3R9dYDSE4LqpKjamKY7tSmahxedL4JBqiooO75LGGFMVx3ddDlg8ryfSyN7Zr1iHXpvKvKCu
        KY7oKZTB3Qt/Lzp7RUZyyjFG21/biCRqCH0fBSUwq/S6PwWefuYa17SqtyCttTdbJlTBweSaT2gTUr/5
        8KKz76dzrdA83IfL3OD+uA/VxhZVeBBjp6rYNhDezScn7kPmgwSSUMqURWcxyuHydAI6n5ER4tm3mKzI
        ELFuVUa2ZxqaWKynDm2oP7gvEzz3JgJCCt04jOEm1Oh0Nr5s13ssT+t9VuOLc2zXW47WKDuNLUeha3sm
        NK7lWqN0TvC24xFoZOwQ6QQOiipZEvIVrUc6gYOMKTa4boLenYTS6bGD57hDcB1y90GIdIZYJUvaVpW/
        j8xjlbFEnfuIl9sx6LFK5xzqozbFSmcXVjnC57S/jEGQc3Ef0tmHnYSsXvQtZyI84kra5S+dQ7ATkuAe
        Y0pjdEfv8Q6RzjFYA0hymxCPWJ7lJf+MwSOdKVhjED/FzxzoUJbF2WI90pmDNY7bUxqZ0wEkS/LGJD9M
        k86S0HCDKCA0EUJnhHAry//oqKQfooxFOreb1c4/sem3rfMV658AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>